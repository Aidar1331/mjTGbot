#!/bin/bash

echo "üöÄ Midjourney Automation System - Quick Start"
echo "============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ Docker Compose"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose"
    exit 1
fi

echo "‚úÖ Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –∏–∑ .env.example..."
    cp .env.example .env
    echo "üìù –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫—Ä–µ–¥–µ–Ω—à–∏–∞–ª–∞–º–∏:"
    echo "   - DISCORD_EMAIL –∏ DISCORD_PASSWORD"
    echo "   - CLAUDE_API_KEY" 
    echo "   - TELEGRAM_BOT_TOKEN –∏ TELEGRAM_ADMIN_ID"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env –∏–ª–∏ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
fi

echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose..."
if ! docker-compose config > /dev/null 2>&1; then
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ docker-compose.yml"
    docker-compose config
    exit 1
fi

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down > /dev/null 2>&1

# –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üóÑÔ∏è  –ó–∞–ø—É—Å–∫ PostgreSQL –∏ Redis..."
docker-compose up -d postgres redis

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
timeout=60
while [ $timeout -gt 0 ]; do
    if docker-compose exec -T postgres pg_isready -U mjuser -d mjsystem > /dev/null 2>&1; then
        echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
        break
    fi
    echo "   –û–∂–∏–¥–∞–Ω–∏–µ... ($timeout —Å–µ–∫)"
    sleep 2
    timeout=$((timeout-2))
done

if [ $timeout -le 0 ]; then
    echo "‚ùå PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    docker-compose logs postgres
    exit 1
fi

# –ó–∞–ø—É—Å–∫ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
echo "üéØ –ó–∞–ø—É—Å–∫ Orchestrator..."
docker-compose up -d orchestrator

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Orchestrator API..."
timeout=60
while [ $timeout -gt 0 ]; do
    if curl -f http://localhost:8000/health > /dev/null 2>&1; then
        echo "‚úÖ Orchestrator API –≥–æ—Ç–æ–≤"
        break
    fi
    echo "   –û–∂–∏–¥–∞–Ω–∏–µ... ($timeout —Å–µ–∫)"
    sleep 2
    timeout=$((timeout-2))
done

if [ $timeout -le 0 ]; then
    echo "‚ùå Orchestrator API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    docker-compose logs orchestrator
    exit 1
fi

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤
echo "ü§ñ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤..."
docker-compose up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."

# Health check
if curl -s http://localhost:8000/health | grep -q "ok\|healthy"; then
    echo "‚úÖ Health Check: OK"
else
    echo "‚ùå Health Check: FAIL"
fi

# API docs
if curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/docs | grep -q "200"; then
    echo "‚úÖ API Docs: OK"
else
    echo "‚ùå API Docs: FAIL" 
fi

echo ""
echo "üéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo ""
echo "üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "   ‚Ä¢ API Health: http://localhost:8000/health"
echo "   ‚Ä¢ API Docs: http://localhost:8000/docs"
echo "   ‚Ä¢ Queue Status: http://localhost:8000/queue/status"
echo "   ‚Ä¢ Agent Status: http://localhost:8000/agents/status"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo "   ‚Ä¢ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã: python scripts/test-system.py"
echo ""
echo "üéØ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!"